cmake_minimum_required(VERSION 3.14) # Imported targets for CMake provided FindX11

macro(sfml_fail_if condition reason)
    if(${condition})
        set(SFML_FOUND 0)
        set(SFML_NOT_FOUND_MESSAGE "${reason}")
        return()
    endif()
endmacro()

function(sfml_to_module_name value variable)
    if(value MATCHES "^(.)(.+)\$")
        string(TOUPPER "${CMAKE_MATCH_1}" head)
        set("${variable}" "${head}${CMAKE_MATCH_2}" PARENT_SCOPE)
    endif()
endfunction()

set(SFML_INSTALLED_MODULES "@SFML_INSTALLED_MODULES@")

set(_SFML_MODULES "@SFML_MODULES@")
set(_SFML_MODULES_TO_LOAD System)

if(SFML_FIND_COMPONENTS STREQUAL "")
    set(_SFML_MODULES_TO_LOAD "${_SFML_INSTALLED_MODULES}")
else()
    foreach(comp IN LISTS _SFML_MODULES)
        string(TOUPPER "${comp}" comp)
        set("SFML_${comp}_FOUND" 0)
    endforeach()
    foreach(comp IN LISTS SFML_FIND_COMPONENTS)
        sfml_to_module_name("${comp}" comp)
        if(comp STREQUAL "System")
            if(NOT SFML_FIND_QUIETLY)
                message(WARNING "The System component is always available and shouldn't be requested")
            endif()
            continue()
        endif()
        sfml_fail_if("NOT;comp;IN_LIST;_SFML_MODULES" "Unknown component (${comp})")
        if(comp IN_LIST _SFML_INSTALLED_MODULES)
            if(comp STREQUAL "Graphics")
                set(_sfml_window Window)
                sfml_fail_if("NOT;_sfml_window;IN_LIST;_SFML_INSTALLED_MODULES" "Graphics module requires the Window module, but it's not installed")
                list(APPEND _SFML_MODULES_TO_LOAD Window)
            endif()
            list(APPEND _SFML_MODULES_TO_LOAD "${comp}")
            string(TOUPPER "${comp}" comp)
            set("SFML_${comp}_FOUND" 1)
        else()
            sfml_fail_if("SFML_FIND_REQUIRED_${comp}" "Component '${comp}' was requested, but it isn't installed")
        endif()
    endforeach()
    list(REMOVE_DUPLICATES _SFML_MODULES_TO_LOAD)
endif()

include(CMakeFindDependencyMacro)
set(SFML_FOUND 1)
set(_sfml_quiet_arg "")
if(SFML_FIND_QUIETLY)
    set(_sfml_quiet_arg QUIET)
endif()
set(_sfml_required_arg "")
if(SFML_FIND_REQUIRED)
    set(_sfml_required_arg REQUIRED)
endif()

foreach(module IN LISTS _SFML_MODULES_TO_LOAD)
    include("${CMAKE_CURRENT_LIST_DIR}/SFMLModuleConfig${module}.cmake")
    if(NOT SFML_FOUND)
        return()
    endif()
endforeach()
